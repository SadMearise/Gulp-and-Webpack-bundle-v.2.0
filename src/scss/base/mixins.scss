@mixin anim($time, $delay) {
	transition: all $time ease $delay;
	-webkit-transition: all $time ease $delay;
	-moz-transition: all $time ease $delay;
	-ms-transition: all $time ease $delay;
	-o-transition: all $time ease $delay;
}

@mixin adaptive-value($property, $maxSize, $minSize, $widthFrom: var(--containerWidth), $widthTo: var(--minWidth), $keepSize: 0) { 
	$addSize: $maxSize - $minSize; 
	@if $keepSize == 1 { // в промежутке
		@media (max-width: #{$widthFrom + px}) and (min-width: #{$widthTo + px}) { 
			#{$property}: calc( 
					#{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / #{$widthFrom - $widthTo}) 
			); 
		} 
	} @else if $keepSize == 2 { // все что меньше $widthFrom
		@media (max-width: #{$widthFrom + px}) { 
			#{$property}: calc( 
					#{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / #{$widthFrom - $widthTo}) 
			); 
		} 
	} @else if $keepSize == 3 { // все что больше $widthFrom
		@media (min-width: #{$widthFrom + px}) { 
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / #{var(--maxWidth) - $widthTo})); 
		} 
	} @else { 
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / #{var(--maxWidth) - $widthTo})); 
	} 
}